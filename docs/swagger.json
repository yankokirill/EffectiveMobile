{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for managing songs in a library.",
        "title": "Song Library API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/library",
    "paths": {
        "/song": {
            "post": {
                "description": "Add a new song to the library with the given title and group.",
                "tags": [
                    "API"
                ],
                "summary": "Add a new song",
                "parameters": [
                    {
                        "description": "Title and group",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.SongAddRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/http.SongAddResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/song/{id}": {
            "get": {
                "description": "Get song verses in partitions with pagination.",
                "tags": [
                    "API"
                ],
                "summary": "Get the lyrics of a specific song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the song",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for starting from a specific verse",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Maximum number of verses to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SongLyricsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing song, identified by its ID.",
                "tags": [
                    "API"
                ],
                "summary": "Update an existing song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the song to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated song details",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SongInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated song details",
                        "schema": {
                            "$ref": "#/definitions/models.SongInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a song from the library by its ID.",
                "tags": [
                    "API"
                ],
                "summary": "Delete a song",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the song to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Song successfully deleted"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "description": "Get song information in partitions using lexicographical order and pagination.",
                "tags": [
                    "API"
                ],
                "summary": "Get information about songs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title of the last song in the previous partition",
                        "name": "prevSong",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Group of the last song in the previous partition",
                        "name": "prevGroup",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of songs to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SongInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/songs/{group}": {
            "get": {
                "description": "Get song information for a specific musical group in partitions using lexicographical order and pagination.",
                "tags": [
                    "API"
                ],
                "summary": "Get information about songs of a specific group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the group",
                        "name": "group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title of the last song in the previous partition",
                        "name": "prevSong",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of songs to retrieve",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SongInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.SongAddRequest": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "http.SongAddResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "http.SongLyricsResponse": {
            "type": "object",
            "properties": {
                "lyrics": {
                    "type": "string"
                }
            }
        },
        "models.SongInfo": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        }
    }
}