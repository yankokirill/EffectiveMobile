basePath: /library
definitions:
  http.SongAddRequest:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  http.SongAddResponse:
    properties:
      id:
        type: integer
    type: object
  http.SongLyricsResponse:
    properties:
      lyrics:
        type: string
    type: object
  models.SongInfo:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the API documentation for managing songs in a library.
  title: Song Library API
  version: "1.0"
paths:
  /song:
    post:
      description: Add a new song to the library with the given title and group.
      parameters:
      - description: Title and group
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/http.SongAddRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/http.SongAddResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a new song
      tags:
      - API
  /song/{id}:
    delete:
      description: Delete a song from the library by its ID.
      parameters:
      - description: ID of the song to be deleted
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Song successfully deleted
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a song
      tags:
      - API
    get:
      description: Get song verses in partitions with pagination.
      parameters:
      - description: ID of the song
        in: path
        name: id
        required: true
        type: integer
      - default: 0
        description: Offset for starting from a specific verse
        in: query
        name: offset
        type: integer
      - default: 20
        description: Maximum number of verses to retrieve
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.SongLyricsResponse'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get the lyrics of a specific song
      tags:
      - API
    put:
      description: Update the details of an existing song, identified by its ID.
      parameters:
      - description: ID of the song to be updated
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongInfo'
      responses:
        "200":
          description: Updated song details
          schema:
            $ref: '#/definitions/models.SongInfo'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing song
      tags:
      - API
  /songs:
    get:
      description: Get song information in partitions using lexicographical order
        and pagination.
      parameters:
      - description: Title of the last song in the previous partition
        in: query
        name: prevSong
        type: string
      - description: Group of the last song in the previous partition
        in: query
        name: prevGroup
        type: string
      - default: 10
        description: Maximum number of songs to retrieve
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SongInfo'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get information about songs
      tags:
      - API
  /songs/{group}:
    get:
      description: Get song information for a specific musical group in partitions
        using lexicographical order and pagination.
      parameters:
      - description: Name of the group
        in: path
        name: group
        required: true
        type: string
      - description: Title of the last song in the previous partition
        in: query
        name: prevSong
        type: string
      - default: 10
        description: Maximum number of songs to retrieve
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SongInfo'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get information about songs of a specific group
      tags:
      - API
schemes:
- http
swagger: "2.0"
